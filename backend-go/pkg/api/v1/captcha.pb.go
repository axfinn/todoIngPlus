// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: captcha.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 验证码模型
type Captcha struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageData     string                 `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3" json:"image_data,omitempty"` // base64编码的图片数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Captcha) Reset() {
	*x = Captcha{}
	mi := &file_captcha_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Captcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Captcha) ProtoMessage() {}

func (x *Captcha) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Captcha.ProtoReflect.Descriptor instead.
func (*Captcha) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{0}
}

func (x *Captcha) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Captcha) GetImageData() string {
	if x != nil {
		return x.ImageData
	}
	return ""
}

// 获取验证码请求
type GetCaptchaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCaptchaRequest) Reset() {
	*x = GetCaptchaRequest{}
	mi := &file_captcha_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCaptchaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaRequest) ProtoMessage() {}

func (x *GetCaptchaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaRequest.ProtoReflect.Descriptor instead.
func (*GetCaptchaRequest) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{1}
}

// 获取验证码响应
type GetCaptchaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Captcha       *Captcha               `protobuf:"bytes,2,opt,name=captcha,proto3" json:"captcha,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCaptchaResponse) Reset() {
	*x = GetCaptchaResponse{}
	mi := &file_captcha_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCaptchaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaResponse) ProtoMessage() {}

func (x *GetCaptchaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_captcha_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaResponse.ProtoReflect.Descriptor instead.
func (*GetCaptchaResponse) Descriptor() ([]byte, []int) {
	return file_captcha_proto_rawDescGZIP(), []int{2}
}

func (x *GetCaptchaResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetCaptchaResponse) GetCaptcha() *Captcha {
	if x != nil {
		return x.Captcha
	}
	return nil
}

var File_captcha_proto protoreflect.FileDescriptor

const file_captcha_proto_rawDesc = "" +
	"\n" +
	"\rcaptcha.proto\x12\x0etodoing.api.v1\x1a\fcommon.proto\"8\n" +
	"\aCaptcha\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"image_data\x18\x02 \x01(\tR\timageData\"\x13\n" +
	"\x11GetCaptchaRequest\"}\n" +
	"\x12GetCaptchaResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x121\n" +
	"\acaptcha\x18\x02 \x01(\v2\x17.todoing.api.v1.CaptchaR\acaptcha2e\n" +
	"\x0eCaptchaService\x12S\n" +
	"\n" +
	"GetCaptcha\x12!.todoing.api.v1.GetCaptchaRequest\x1a\".todoing.api.v1.GetCaptchaResponseB1Z/github.com/axfinn/todoIng/backend-go/pkg/api/v1b\x06proto3"

var (
	file_captcha_proto_rawDescOnce sync.Once
	file_captcha_proto_rawDescData []byte
)

func file_captcha_proto_rawDescGZIP() []byte {
	file_captcha_proto_rawDescOnce.Do(func() {
		file_captcha_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_captcha_proto_rawDesc), len(file_captcha_proto_rawDesc)))
	})
	return file_captcha_proto_rawDescData
}

var file_captcha_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_captcha_proto_goTypes = []any{
	(*Captcha)(nil),            // 0: todoing.api.v1.Captcha
	(*GetCaptchaRequest)(nil),  // 1: todoing.api.v1.GetCaptchaRequest
	(*GetCaptchaResponse)(nil), // 2: todoing.api.v1.GetCaptchaResponse
	(*Response)(nil),           // 3: todoing.api.v1.Response
}
var file_captcha_proto_depIdxs = []int32{
	3, // 0: todoing.api.v1.GetCaptchaResponse.response:type_name -> todoing.api.v1.Response
	0, // 1: todoing.api.v1.GetCaptchaResponse.captcha:type_name -> todoing.api.v1.Captcha
	1, // 2: todoing.api.v1.CaptchaService.GetCaptcha:input_type -> todoing.api.v1.GetCaptchaRequest
	2, // 3: todoing.api.v1.CaptchaService.GetCaptcha:output_type -> todoing.api.v1.GetCaptchaResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_captcha_proto_init() }
func file_captcha_proto_init() {
	if File_captcha_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_captcha_proto_rawDesc), len(file_captcha_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_captcha_proto_goTypes,
		DependencyIndexes: file_captcha_proto_depIdxs,
		MessageInfos:      file_captcha_proto_msgTypes,
	}.Build()
	File_captcha_proto = out.File
	file_captcha_proto_goTypes = nil
	file_captcha_proto_depIdxs = nil
}
