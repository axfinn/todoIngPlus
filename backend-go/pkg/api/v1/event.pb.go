// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.5
// source: event.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 事件类型
type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	EventType_EVENT_TYPE_BIRTHDAY    EventType = 1
	EventType_EVENT_TYPE_ANNIVERSARY EventType = 2
	EventType_EVENT_TYPE_HOLIDAY     EventType = 3
	EventType_EVENT_TYPE_CUSTOM      EventType = 4
	EventType_EVENT_TYPE_MEETING     EventType = 5
	EventType_EVENT_TYPE_DEADLINE    EventType = 6
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_BIRTHDAY",
		2: "EVENT_TYPE_ANNIVERSARY",
		3: "EVENT_TYPE_HOLIDAY",
		4: "EVENT_TYPE_CUSTOM",
		5: "EVENT_TYPE_MEETING",
		6: "EVENT_TYPE_DEADLINE",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_BIRTHDAY":    1,
		"EVENT_TYPE_ANNIVERSARY": 2,
		"EVENT_TYPE_HOLIDAY":     3,
		"EVENT_TYPE_CUSTOM":      4,
		"EVENT_TYPE_MEETING":     5,
		"EVENT_TYPE_DEADLINE":    6,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

// 循环类型
type RecurrenceType int32

const (
	RecurrenceType_RECURRENCE_TYPE_UNSPECIFIED RecurrenceType = 0 // 兼容
	RecurrenceType_RECURRENCE_TYPE_NONE        RecurrenceType = 1
	RecurrenceType_RECURRENCE_TYPE_YEARLY      RecurrenceType = 2
	RecurrenceType_RECURRENCE_TYPE_MONTHLY     RecurrenceType = 3
	RecurrenceType_RECURRENCE_TYPE_WEEKLY      RecurrenceType = 4
	RecurrenceType_RECURRENCE_TYPE_DAILY       RecurrenceType = 5
)

// Enum value maps for RecurrenceType.
var (
	RecurrenceType_name = map[int32]string{
		0: "RECURRENCE_TYPE_UNSPECIFIED",
		1: "RECURRENCE_TYPE_NONE",
		2: "RECURRENCE_TYPE_YEARLY",
		3: "RECURRENCE_TYPE_MONTHLY",
		4: "RECURRENCE_TYPE_WEEKLY",
		5: "RECURRENCE_TYPE_DAILY",
	}
	RecurrenceType_value = map[string]int32{
		"RECURRENCE_TYPE_UNSPECIFIED": 0,
		"RECURRENCE_TYPE_NONE":        1,
		"RECURRENCE_TYPE_YEARLY":      2,
		"RECURRENCE_TYPE_MONTHLY":     3,
		"RECURRENCE_TYPE_WEEKLY":      4,
		"RECURRENCE_TYPE_DAILY":       5,
	}
)

func (x RecurrenceType) Enum() *RecurrenceType {
	p := new(RecurrenceType)
	*p = x
	return p
}

func (x RecurrenceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecurrenceType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[1].Descriptor()
}

func (RecurrenceType) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[1]
}

func (x RecurrenceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecurrenceType.Descriptor instead.
func (RecurrenceType) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

// 事件评论 / 时间线
type EventCommentType int32

const (
	EventCommentType_EVENT_COMMENT_TYPE_UNSPECIFIED EventCommentType = 0
	EventCommentType_EVENT_COMMENT_TYPE_TEXT        EventCommentType = 1
	EventCommentType_EVENT_COMMENT_TYPE_SYSTEM      EventCommentType = 2
)

// Enum value maps for EventCommentType.
var (
	EventCommentType_name = map[int32]string{
		0: "EVENT_COMMENT_TYPE_UNSPECIFIED",
		1: "EVENT_COMMENT_TYPE_TEXT",
		2: "EVENT_COMMENT_TYPE_SYSTEM",
	}
	EventCommentType_value = map[string]int32{
		"EVENT_COMMENT_TYPE_UNSPECIFIED": 0,
		"EVENT_COMMENT_TYPE_TEXT":        1,
		"EVENT_COMMENT_TYPE_SYSTEM":      2,
	}
)

func (x EventCommentType) Enum() *EventCommentType {
	p := new(EventCommentType)
	*p = x
	return p
}

func (x EventCommentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCommentType) Descriptor() protoreflect.EnumDescriptor {
	return file_event_proto_enumTypes[2].Descriptor()
}

func (EventCommentType) Type() protoreflect.EnumType {
	return &file_event_proto_enumTypes[2]
}

func (x EventCommentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCommentType.Descriptor instead.
func (EventCommentType) EnumDescriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

// 事件
type Event struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title            string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description      string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	EventType        EventType              `protobuf:"varint,5,opt,name=event_type,json=eventType,proto3,enum=todoing.api.v1.EventType" json:"event_type,omitempty"`
	EventDate        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	RecurrenceType   RecurrenceType         `protobuf:"varint,7,opt,name=recurrence_type,json=recurrenceType,proto3,enum=todoing.api.v1.RecurrenceType" json:"recurrence_type,omitempty"`                                             // none 则为一次性
	RecurrenceConfig map[string]string      `protobuf:"bytes,8,rep,name=recurrence_config,json=recurrenceConfig,proto3" json:"recurrence_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 预留 (例如 day, interval)
	// importance_level 对齐后端 ImportanceLevel (1-5)
	ImportanceLevel int32                  `protobuf:"varint,9,opt,name=importance_level,json=importanceLevel,proto3" json:"importance_level,omitempty"` // unchanged
	Tags            []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Location        string                 `protobuf:"bytes,11,opt,name=location,proto3" json:"location,omitempty"`
	IsAllDay        bool                   `protobuf:"varint,12,opt,name=is_all_day,json=isAllDay,proto3" json:"is_all_day,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsActive        bool                   `protobuf:"varint,15,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	LastTriggeredAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=last_triggered_at,json=lastTriggeredAt,proto3" json:"last_triggered_at,omitempty"` // 可为空
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Event) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Event) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Event) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Event) GetEventDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDate
	}
	return nil
}

func (x *Event) GetRecurrenceType() RecurrenceType {
	if x != nil {
		return x.RecurrenceType
	}
	return RecurrenceType_RECURRENCE_TYPE_UNSPECIFIED
}

func (x *Event) GetRecurrenceConfig() map[string]string {
	if x != nil {
		return x.RecurrenceConfig
	}
	return nil
}

func (x *Event) GetImportanceLevel() int32 {
	if x != nil {
		return x.ImportanceLevel
	}
	return 0
}

func (x *Event) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Event) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Event) GetIsAllDay() bool {
	if x != nil {
		return x.IsAllDay
	}
	return false
}

func (x *Event) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Event) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Event) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Event) GetLastTriggeredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTriggeredAt
	}
	return nil
}

// 创建事件
type CreateEventRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Title            string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description      string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	EventType        EventType              `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=todoing.api.v1.EventType" json:"event_type,omitempty"`
	EventDate        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	RecurrenceType   RecurrenceType         `protobuf:"varint,5,opt,name=recurrence_type,json=recurrenceType,proto3,enum=todoing.api.v1.RecurrenceType" json:"recurrence_type,omitempty"` // 可选
	RecurrenceConfig map[string]string      `protobuf:"bytes,6,rep,name=recurrence_config,json=recurrenceConfig,proto3" json:"recurrence_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ImportanceLevel  int32                  `protobuf:"varint,7,opt,name=importance_level,json=importanceLevel,proto3" json:"importance_level,omitempty"`
	Tags             []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Location         string                 `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	IsAllDay         bool                   `protobuf:"varint,10,opt,name=is_all_day,json=isAllDay,proto3" json:"is_all_day,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateEventRequest) Reset() {
	*x = CreateEventRequest{}
	mi := &file_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventRequest) ProtoMessage() {}

func (x *CreateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventRequest.ProtoReflect.Descriptor instead.
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateEventRequest) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *CreateEventRequest) GetEventDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDate
	}
	return nil
}

func (x *CreateEventRequest) GetRecurrenceType() RecurrenceType {
	if x != nil {
		return x.RecurrenceType
	}
	return RecurrenceType_RECURRENCE_TYPE_UNSPECIFIED
}

func (x *CreateEventRequest) GetRecurrenceConfig() map[string]string {
	if x != nil {
		return x.RecurrenceConfig
	}
	return nil
}

func (x *CreateEventRequest) GetImportanceLevel() int32 {
	if x != nil {
		return x.ImportanceLevel
	}
	return 0
}

func (x *CreateEventRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateEventRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateEventRequest) GetIsAllDay() bool {
	if x != nil {
		return x.IsAllDay
	}
	return false
}

type CreateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEventResponse) Reset() {
	*x = CreateEventResponse{}
	mi := &file_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEventResponse) ProtoMessage() {}

func (x *CreateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEventResponse.ProtoReflect.Descriptor instead.
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEventResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// 获取事件
type GetEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventRequest) Reset() {
	*x = GetEventRequest{}
	mi := &file_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventRequest) ProtoMessage() {}

func (x *GetEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventRequest.ProtoReflect.Descriptor instead.
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{3}
}

func (x *GetEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventResponse) Reset() {
	*x = GetEventResponse{}
	mi := &file_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventResponse) ProtoMessage() {}

func (x *GetEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventResponse.ProtoReflect.Descriptor instead.
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{4}
}

func (x *GetEventResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// 更新事件 (全部可选)
type UpdateEventRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title            string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description      string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	EventType        EventType              `protobuf:"varint,4,opt,name=event_type,json=eventType,proto3,enum=todoing.api.v1.EventType" json:"event_type,omitempty"`
	EventDate        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=event_date,json=eventDate,proto3" json:"event_date,omitempty"`
	RecurrenceType   RecurrenceType         `protobuf:"varint,6,opt,name=recurrence_type,json=recurrenceType,proto3,enum=todoing.api.v1.RecurrenceType" json:"recurrence_type,omitempty"`
	RecurrenceConfig map[string]string      `protobuf:"bytes,7,rep,name=recurrence_config,json=recurrenceConfig,proto3" json:"recurrence_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ImportanceLevel  int32                  `protobuf:"varint,8,opt,name=importance_level,json=importanceLevel,proto3" json:"importance_level,omitempty"`
	Tags             []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Location         string                 `protobuf:"bytes,10,opt,name=location,proto3" json:"location,omitempty"`
	IsAllDay         bool                   `protobuf:"varint,11,opt,name=is_all_day,json=isAllDay,proto3" json:"is_all_day,omitempty"`
	IsActive         bool                   `protobuf:"varint,12,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateEventRequest) Reset() {
	*x = UpdateEventRequest{}
	mi := &file_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventRequest) ProtoMessage() {}

func (x *UpdateEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEventRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateEventRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateEventRequest) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *UpdateEventRequest) GetEventDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDate
	}
	return nil
}

func (x *UpdateEventRequest) GetRecurrenceType() RecurrenceType {
	if x != nil {
		return x.RecurrenceType
	}
	return RecurrenceType_RECURRENCE_TYPE_UNSPECIFIED
}

func (x *UpdateEventRequest) GetRecurrenceConfig() map[string]string {
	if x != nil {
		return x.RecurrenceConfig
	}
	return nil
}

func (x *UpdateEventRequest) GetImportanceLevel() int32 {
	if x != nil {
		return x.ImportanceLevel
	}
	return 0
}

func (x *UpdateEventRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateEventRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateEventRequest) GetIsAllDay() bool {
	if x != nil {
		return x.IsAllDay
	}
	return false
}

func (x *UpdateEventRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Event         *Event                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventResponse) Reset() {
	*x = UpdateEventResponse{}
	mi := &file_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventResponse) ProtoMessage() {}

func (x *UpdateEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateEventResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *UpdateEventResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// 删除事件
type DeleteEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventRequest) Reset() {
	*x = DeleteEventRequest{}
	mi := &file_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventRequest) ProtoMessage() {}

func (x *DeleteEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEventRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 列表 & 过滤
type ListEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *PaginationRequest     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	EventType     EventType              `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=todoing.api.v1.EventType" json:"event_type,omitempty"`
	UpcomingOnly  bool                   `protobuf:"varint,3,opt,name=upcoming_only,json=upcomingOnly,proto3" json:"upcoming_only,omitempty"` // 仅未来
	ActiveOnly    bool                   `protobuf:"varint,4,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`       // is_active
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsRequest) Reset() {
	*x = ListEventsRequest{}
	mi := &file_event_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsRequest) ProtoMessage() {}

func (x *ListEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsRequest.ProtoReflect.Descriptor instead.
func (*ListEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{8}
}

func (x *ListEventsRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListEventsRequest) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *ListEventsRequest) GetUpcomingOnly() bool {
	if x != nil {
		return x.UpcomingOnly
	}
	return false
}

func (x *ListEventsRequest) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

type ListEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Events        []*Event               `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventsResponse) Reset() {
	*x = ListEventsResponse{}
	mi := &file_event_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventsResponse) ProtoMessage() {}

func (x *ListEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventsResponse.ProtoReflect.Descriptor instead.
func (*ListEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{9}
}

func (x *ListEventsResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListEventsResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 即将到来的事件 (按天数窗口)
type GetUpcomingEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          int32                  `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUpcomingEventsRequest) Reset() {
	*x = GetUpcomingEventsRequest{}
	mi := &file_event_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUpcomingEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingEventsRequest) ProtoMessage() {}

func (x *GetUpcomingEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingEventsRequest.ProtoReflect.Descriptor instead.
func (*GetUpcomingEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{10}
}

func (x *GetUpcomingEventsRequest) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetUpcomingEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Events        []*Event               `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	Days          int32                  `protobuf:"varint,3,opt,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUpcomingEventsResponse) Reset() {
	*x = GetUpcomingEventsResponse{}
	mi := &file_event_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUpcomingEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUpcomingEventsResponse) ProtoMessage() {}

func (x *GetUpcomingEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUpcomingEventsResponse.ProtoReflect.Descriptor instead.
func (*GetUpcomingEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{11}
}

func (x *GetUpcomingEventsResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetUpcomingEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetUpcomingEventsResponse) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

// 日历 (指定年/月)
type GetCalendarEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month         int32                  `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCalendarEventsRequest) Reset() {
	*x = GetCalendarEventsRequest{}
	mi := &file_event_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarEventsRequest) ProtoMessage() {}

func (x *GetCalendarEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarEventsRequest.ProtoReflect.Descriptor instead.
func (*GetCalendarEventsRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{12}
}

func (x *GetCalendarEventsRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetCalendarEventsRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

type CalendarDayEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Events        []*Event               `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalendarDayEvents) Reset() {
	*x = CalendarDayEvents{}
	mi := &file_event_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalendarDayEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalendarDayEvents) ProtoMessage() {}

func (x *CalendarDayEvents) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalendarDayEvents.ProtoReflect.Descriptor instead.
func (*CalendarDayEvents) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{13}
}

func (x *CalendarDayEvents) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CalendarDayEvents) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetCalendarEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Year          int32                  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	Month         int32                  `protobuf:"varint,3,opt,name=month,proto3" json:"month,omitempty"`
	Days          []*CalendarDayEvents   `protobuf:"bytes,4,rep,name=days,proto3" json:"days,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCalendarEventsResponse) Reset() {
	*x = GetCalendarEventsResponse{}
	mi := &file_event_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCalendarEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCalendarEventsResponse) ProtoMessage() {}

func (x *GetCalendarEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCalendarEventsResponse.ProtoReflect.Descriptor instead.
func (*GetCalendarEventsResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{14}
}

func (x *GetCalendarEventsResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetCalendarEventsResponse) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetCalendarEventsResponse) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *GetCalendarEventsResponse) GetDays() []*CalendarDayEvents {
	if x != nil {
		return x.Days
	}
	return nil
}

type EventComment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId       string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Type          EventCommentType       `protobuf:"varint,4,opt,name=type,proto3,enum=todoing.api.v1.EventCommentType" json:"type,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Meta          map[string]string      `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // system 元数据
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventComment) Reset() {
	*x = EventComment{}
	mi := &file_event_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventComment) ProtoMessage() {}

func (x *EventComment) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventComment.ProtoReflect.Descriptor instead.
func (*EventComment) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{15}
}

func (x *EventComment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventComment) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventComment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EventComment) GetType() EventCommentType {
	if x != nil {
		return x.Type
	}
	return EventCommentType_EVENT_COMMENT_TYPE_UNSPECIFIED
}

func (x *EventComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EventComment) GetMeta() map[string]string {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EventComment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EventComment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AddEventCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEventCommentRequest) Reset() {
	*x = AddEventCommentRequest{}
	mi := &file_event_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEventCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventCommentRequest) ProtoMessage() {}

func (x *AddEventCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventCommentRequest.ProtoReflect.Descriptor instead.
func (*AddEventCommentRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{16}
}

func (x *AddEventCommentRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *AddEventCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddEventCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Comment       *EventComment          `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddEventCommentResponse) Reset() {
	*x = AddEventCommentResponse{}
	mi := &file_event_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddEventCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventCommentResponse) ProtoMessage() {}

func (x *AddEventCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventCommentResponse.ProtoReflect.Descriptor instead.
func (*AddEventCommentResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{17}
}

func (x *AddEventCommentResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AddEventCommentResponse) GetComment() *EventComment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UpdateEventCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventCommentRequest) Reset() {
	*x = UpdateEventCommentRequest{}
	mi := &file_event_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventCommentRequest) ProtoMessage() {}

func (x *UpdateEventCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateEventCommentRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateEventCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *UpdateEventCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateEventCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Comment       *EventComment          `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateEventCommentResponse) Reset() {
	*x = UpdateEventCommentResponse{}
	mi := &file_event_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEventCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEventCommentResponse) ProtoMessage() {}

func (x *UpdateEventCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEventCommentResponse.ProtoReflect.Descriptor instead.
func (*UpdateEventCommentResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateEventCommentResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *UpdateEventCommentResponse) GetComment() *EventComment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type DeleteEventCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEventCommentRequest) Reset() {
	*x = DeleteEventCommentRequest{}
	mi := &file_event_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEventCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEventCommentRequest) ProtoMessage() {}

func (x *DeleteEventCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEventCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteEventCommentRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteEventCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type ListEventTimelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	BeforeId      string                 `protobuf:"bytes,3,opt,name=before_id,json=beforeId,proto3" json:"before_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventTimelineRequest) Reset() {
	*x = ListEventTimelineRequest{}
	mi := &file_event_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTimelineRequest) ProtoMessage() {}

func (x *ListEventTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTimelineRequest.ProtoReflect.Descriptor instead.
func (*ListEventTimelineRequest) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{21}
}

func (x *ListEventTimelineRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *ListEventTimelineRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListEventTimelineRequest) GetBeforeId() string {
	if x != nil {
		return x.BeforeId
	}
	return ""
}

type ListEventTimelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Items         []*EventComment        `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Count         int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEventTimelineResponse) Reset() {
	*x = ListEventTimelineResponse{}
	mi := &file_event_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEventTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventTimelineResponse) ProtoMessage() {}

func (x *ListEventTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_event_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventTimelineResponse.ProtoReflect.Descriptor instead.
func (*ListEventTimelineResponse) Descriptor() ([]byte, []int) {
	return file_event_proto_rawDescGZIP(), []int{22}
}

func (x *ListEventTimelineResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ListEventTimelineResponse) GetItems() []*EventComment {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListEventTimelineResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_event_proto protoreflect.FileDescriptor

const file_event_proto_rawDesc = "" +
	"\n" +
	"\vevent.proto\x12\x0etodoing.api.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\fcommon.proto\"\x99\x06\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x128\n" +
	"\n" +
	"event_type\x18\x05 \x01(\x0e2\x19.todoing.api.v1.EventTypeR\teventType\x129\n" +
	"\n" +
	"event_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\teventDate\x12G\n" +
	"\x0frecurrence_type\x18\a \x01(\x0e2\x1e.todoing.api.v1.RecurrenceTypeR\x0erecurrenceType\x12X\n" +
	"\x11recurrence_config\x18\b \x03(\v2+.todoing.api.v1.Event.RecurrenceConfigEntryR\x10recurrenceConfig\x12)\n" +
	"\x10importance_level\x18\t \x01(\x05R\x0fimportanceLevel\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12\x1a\n" +
	"\blocation\x18\v \x01(\tR\blocation\x12\x1c\n" +
	"\n" +
	"is_all_day\x18\f \x01(\bR\bisAllDay\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1b\n" +
	"\tis_active\x18\x0f \x01(\bR\bisActive\x12F\n" +
	"\x11last_triggered_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\x0flastTriggeredAt\x1aC\n" +
	"\x15RecurrenceConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x04\n" +
	"\x12CreateEventRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x128\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2\x19.todoing.api.v1.EventTypeR\teventType\x129\n" +
	"\n" +
	"event_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\teventDate\x12G\n" +
	"\x0frecurrence_type\x18\x05 \x01(\x0e2\x1e.todoing.api.v1.RecurrenceTypeR\x0erecurrenceType\x12e\n" +
	"\x11recurrence_config\x18\x06 \x03(\v28.todoing.api.v1.CreateEventRequest.RecurrenceConfigEntryR\x10recurrenceConfig\x12)\n" +
	"\x10importance_level\x18\a \x01(\x05R\x0fimportanceLevel\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12\x1a\n" +
	"\blocation\x18\t \x01(\tR\blocation\x12\x1c\n" +
	"\n" +
	"is_all_day\x18\n" +
	" \x01(\bR\bisAllDay\x1aC\n" +
	"\x15RecurrenceConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"x\n" +
	"\x13CreateEventResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x12+\n" +
	"\x05event\x18\x02 \x01(\v2\x15.todoing.api.v1.EventR\x05event\"!\n" +
	"\x0fGetEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"u\n" +
	"\x10GetEventResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x12+\n" +
	"\x05event\x18\x02 \x01(\v2\x15.todoing.api.v1.EventR\x05event\"\xdc\x04\n" +
	"\x12UpdateEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x128\n" +
	"\n" +
	"event_type\x18\x04 \x01(\x0e2\x19.todoing.api.v1.EventTypeR\teventType\x129\n" +
	"\n" +
	"event_date\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\teventDate\x12G\n" +
	"\x0frecurrence_type\x18\x06 \x01(\x0e2\x1e.todoing.api.v1.RecurrenceTypeR\x0erecurrenceType\x12e\n" +
	"\x11recurrence_config\x18\a \x03(\v28.todoing.api.v1.UpdateEventRequest.RecurrenceConfigEntryR\x10recurrenceConfig\x12)\n" +
	"\x10importance_level\x18\b \x01(\x05R\x0fimportanceLevel\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12\x1a\n" +
	"\blocation\x18\n" +
	" \x01(\tR\blocation\x12\x1c\n" +
	"\n" +
	"is_all_day\x18\v \x01(\bR\bisAllDay\x12\x1b\n" +
	"\tis_active\x18\f \x01(\bR\bisActive\x1aC\n" +
	"\x15RecurrenceConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"x\n" +
	"\x13UpdateEventResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x12+\n" +
	"\x05event\x18\x02 \x01(\v2\x15.todoing.api.v1.EventR\x05event\"$\n" +
	"\x12DeleteEventRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xd6\x01\n" +
	"\x11ListEventsRequest\x12A\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2!.todoing.api.v1.PaginationRequestR\n" +
	"pagination\x128\n" +
	"\n" +
	"event_type\x18\x02 \x01(\x0e2\x19.todoing.api.v1.EventTypeR\teventType\x12#\n" +
	"\rupcoming_only\x18\x03 \x01(\bR\fupcomingOnly\x12\x1f\n" +
	"\vactive_only\x18\x04 \x01(\bR\n" +
	"activeOnly\"\xbd\x01\n" +
	"\x12ListEventsResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x12-\n" +
	"\x06events\x18\x02 \x03(\v2\x15.todoing.api.v1.EventR\x06events\x12B\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2\".todoing.api.v1.PaginationResponseR\n" +
	"pagination\".\n" +
	"\x18GetUpcomingEventsRequest\x12\x12\n" +
	"\x04days\x18\x01 \x01(\x05R\x04days\"\x94\x01\n" +
	"\x19GetUpcomingEventsResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x12-\n" +
	"\x06events\x18\x02 \x03(\v2\x15.todoing.api.v1.EventR\x06events\x12\x12\n" +
	"\x04days\x18\x03 \x01(\x05R\x04days\"D\n" +
	"\x18GetCalendarEventsRequest\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x14\n" +
	"\x05month\x18\x02 \x01(\x05R\x05month\"V\n" +
	"\x11CalendarDayEvents\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12-\n" +
	"\x06events\x18\x02 \x03(\v2\x15.todoing.api.v1.EventR\x06events\"\xb2\x01\n" +
	"\x19GetCalendarEventsResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x12\x12\n" +
	"\x04year\x18\x02 \x01(\x05R\x04year\x12\x14\n" +
	"\x05month\x18\x03 \x01(\x05R\x05month\x125\n" +
	"\x04days\x18\x04 \x03(\v2!.todoing.api.v1.CalendarDayEventsR\x04days\"\x8d\x03\n" +
	"\fEventComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x124\n" +
	"\x04type\x18\x04 \x01(\x0e2 .todoing.api.v1.EventCommentTypeR\x04type\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12:\n" +
	"\x04meta\x18\x06 \x03(\v2&.todoing.api.v1.EventComment.MetaEntryR\x04meta\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a7\n" +
	"\tMetaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"M\n" +
	"\x16AddEventCommentRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"\x87\x01\n" +
	"\x17AddEventCommentResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x126\n" +
	"\acomment\x18\x02 \x01(\v2\x1c.todoing.api.v1.EventCommentR\acomment\"T\n" +
	"\x19UpdateEventCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"\x8a\x01\n" +
	"\x1aUpdateEventCommentResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x126\n" +
	"\acomment\x18\x02 \x01(\v2\x1c.todoing.api.v1.EventCommentR\acomment\":\n" +
	"\x19DeleteEventCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"h\n" +
	"\x18ListEventTimelineRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x1b\n" +
	"\tbefore_id\x18\x03 \x01(\tR\bbeforeId\"\x9b\x01\n" +
	"\x19ListEventTimelineResponse\x124\n" +
	"\bresponse\x18\x01 \x01(\v2\x18.todoing.api.v1.ResponseR\bresponse\x122\n" +
	"\x05items\x18\x02 \x03(\v2\x1c.todoing.api.v1.EventCommentR\x05items\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count*\xbc\x01\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13EVENT_TYPE_BIRTHDAY\x10\x01\x12\x1a\n" +
	"\x16EVENT_TYPE_ANNIVERSARY\x10\x02\x12\x16\n" +
	"\x12EVENT_TYPE_HOLIDAY\x10\x03\x12\x15\n" +
	"\x11EVENT_TYPE_CUSTOM\x10\x04\x12\x16\n" +
	"\x12EVENT_TYPE_MEETING\x10\x05\x12\x17\n" +
	"\x13EVENT_TYPE_DEADLINE\x10\x06*\xbb\x01\n" +
	"\x0eRecurrenceType\x12\x1f\n" +
	"\x1bRECURRENCE_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14RECURRENCE_TYPE_NONE\x10\x01\x12\x1a\n" +
	"\x16RECURRENCE_TYPE_YEARLY\x10\x02\x12\x1b\n" +
	"\x17RECURRENCE_TYPE_MONTHLY\x10\x03\x12\x1a\n" +
	"\x16RECURRENCE_TYPE_WEEKLY\x10\x04\x12\x19\n" +
	"\x15RECURRENCE_TYPE_DAILY\x10\x05*r\n" +
	"\x10EventCommentType\x12\"\n" +
	"\x1eEVENT_COMMENT_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17EVENT_COMMENT_TYPE_TEXT\x10\x01\x12\x1d\n" +
	"\x19EVENT_COMMENT_TYPE_SYSTEM\x10\x022\x99\b\n" +
	"\fEventService\x12V\n" +
	"\vCreateEvent\x12\".todoing.api.v1.CreateEventRequest\x1a#.todoing.api.v1.CreateEventResponse\x12M\n" +
	"\bGetEvent\x12\x1f.todoing.api.v1.GetEventRequest\x1a .todoing.api.v1.GetEventResponse\x12V\n" +
	"\vUpdateEvent\x12\".todoing.api.v1.UpdateEventRequest\x1a#.todoing.api.v1.UpdateEventResponse\x12K\n" +
	"\vDeleteEvent\x12\".todoing.api.v1.DeleteEventRequest\x1a\x18.todoing.api.v1.Response\x12S\n" +
	"\n" +
	"ListEvents\x12!.todoing.api.v1.ListEventsRequest\x1a\".todoing.api.v1.ListEventsResponse\x12h\n" +
	"\x11GetUpcomingEvents\x12(.todoing.api.v1.GetUpcomingEventsRequest\x1a).todoing.api.v1.GetUpcomingEventsResponse\x12h\n" +
	"\x11GetCalendarEvents\x12(.todoing.api.v1.GetCalendarEventsRequest\x1a).todoing.api.v1.GetCalendarEventsResponse\x12b\n" +
	"\x0fAddEventComment\x12&.todoing.api.v1.AddEventCommentRequest\x1a'.todoing.api.v1.AddEventCommentResponse\x12k\n" +
	"\x12UpdateEventComment\x12).todoing.api.v1.UpdateEventCommentRequest\x1a*.todoing.api.v1.UpdateEventCommentResponse\x12Y\n" +
	"\x12DeleteEventComment\x12).todoing.api.v1.DeleteEventCommentRequest\x1a\x18.todoing.api.v1.Response\x12h\n" +
	"\x11ListEventTimeline\x12(.todoing.api.v1.ListEventTimelineRequest\x1a).todoing.api.v1.ListEventTimelineResponseB5Z3github.com/axfinn/todoIngPlus/backend-go/pkg/api/v1b\x06proto3"

var (
	file_event_proto_rawDescOnce sync.Once
	file_event_proto_rawDescData []byte
)

func file_event_proto_rawDescGZIP() []byte {
	file_event_proto_rawDescOnce.Do(func() {
		file_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)))
	})
	return file_event_proto_rawDescData
}

var file_event_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_event_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_event_proto_goTypes = []any{
	(EventType)(0),                     // 0: todoing.api.v1.EventType
	(RecurrenceType)(0),                // 1: todoing.api.v1.RecurrenceType
	(EventCommentType)(0),              // 2: todoing.api.v1.EventCommentType
	(*Event)(nil),                      // 3: todoing.api.v1.Event
	(*CreateEventRequest)(nil),         // 4: todoing.api.v1.CreateEventRequest
	(*CreateEventResponse)(nil),        // 5: todoing.api.v1.CreateEventResponse
	(*GetEventRequest)(nil),            // 6: todoing.api.v1.GetEventRequest
	(*GetEventResponse)(nil),           // 7: todoing.api.v1.GetEventResponse
	(*UpdateEventRequest)(nil),         // 8: todoing.api.v1.UpdateEventRequest
	(*UpdateEventResponse)(nil),        // 9: todoing.api.v1.UpdateEventResponse
	(*DeleteEventRequest)(nil),         // 10: todoing.api.v1.DeleteEventRequest
	(*ListEventsRequest)(nil),          // 11: todoing.api.v1.ListEventsRequest
	(*ListEventsResponse)(nil),         // 12: todoing.api.v1.ListEventsResponse
	(*GetUpcomingEventsRequest)(nil),   // 13: todoing.api.v1.GetUpcomingEventsRequest
	(*GetUpcomingEventsResponse)(nil),  // 14: todoing.api.v1.GetUpcomingEventsResponse
	(*GetCalendarEventsRequest)(nil),   // 15: todoing.api.v1.GetCalendarEventsRequest
	(*CalendarDayEvents)(nil),          // 16: todoing.api.v1.CalendarDayEvents
	(*GetCalendarEventsResponse)(nil),  // 17: todoing.api.v1.GetCalendarEventsResponse
	(*EventComment)(nil),               // 18: todoing.api.v1.EventComment
	(*AddEventCommentRequest)(nil),     // 19: todoing.api.v1.AddEventCommentRequest
	(*AddEventCommentResponse)(nil),    // 20: todoing.api.v1.AddEventCommentResponse
	(*UpdateEventCommentRequest)(nil),  // 21: todoing.api.v1.UpdateEventCommentRequest
	(*UpdateEventCommentResponse)(nil), // 22: todoing.api.v1.UpdateEventCommentResponse
	(*DeleteEventCommentRequest)(nil),  // 23: todoing.api.v1.DeleteEventCommentRequest
	(*ListEventTimelineRequest)(nil),   // 24: todoing.api.v1.ListEventTimelineRequest
	(*ListEventTimelineResponse)(nil),  // 25: todoing.api.v1.ListEventTimelineResponse
	nil,                                // 26: todoing.api.v1.Event.RecurrenceConfigEntry
	nil,                                // 27: todoing.api.v1.CreateEventRequest.RecurrenceConfigEntry
	nil,                                // 28: todoing.api.v1.UpdateEventRequest.RecurrenceConfigEntry
	nil,                                // 29: todoing.api.v1.EventComment.MetaEntry
	(*timestamppb.Timestamp)(nil),      // 30: google.protobuf.Timestamp
	(*Response)(nil),                   // 31: todoing.api.v1.Response
	(*PaginationRequest)(nil),          // 32: todoing.api.v1.PaginationRequest
	(*PaginationResponse)(nil),         // 33: todoing.api.v1.PaginationResponse
}
var file_event_proto_depIdxs = []int32{
	0,  // 0: todoing.api.v1.Event.event_type:type_name -> todoing.api.v1.EventType
	30, // 1: todoing.api.v1.Event.event_date:type_name -> google.protobuf.Timestamp
	1,  // 2: todoing.api.v1.Event.recurrence_type:type_name -> todoing.api.v1.RecurrenceType
	26, // 3: todoing.api.v1.Event.recurrence_config:type_name -> todoing.api.v1.Event.RecurrenceConfigEntry
	30, // 4: todoing.api.v1.Event.created_at:type_name -> google.protobuf.Timestamp
	30, // 5: todoing.api.v1.Event.updated_at:type_name -> google.protobuf.Timestamp
	30, // 6: todoing.api.v1.Event.last_triggered_at:type_name -> google.protobuf.Timestamp
	0,  // 7: todoing.api.v1.CreateEventRequest.event_type:type_name -> todoing.api.v1.EventType
	30, // 8: todoing.api.v1.CreateEventRequest.event_date:type_name -> google.protobuf.Timestamp
	1,  // 9: todoing.api.v1.CreateEventRequest.recurrence_type:type_name -> todoing.api.v1.RecurrenceType
	27, // 10: todoing.api.v1.CreateEventRequest.recurrence_config:type_name -> todoing.api.v1.CreateEventRequest.RecurrenceConfigEntry
	31, // 11: todoing.api.v1.CreateEventResponse.response:type_name -> todoing.api.v1.Response
	3,  // 12: todoing.api.v1.CreateEventResponse.event:type_name -> todoing.api.v1.Event
	31, // 13: todoing.api.v1.GetEventResponse.response:type_name -> todoing.api.v1.Response
	3,  // 14: todoing.api.v1.GetEventResponse.event:type_name -> todoing.api.v1.Event
	0,  // 15: todoing.api.v1.UpdateEventRequest.event_type:type_name -> todoing.api.v1.EventType
	30, // 16: todoing.api.v1.UpdateEventRequest.event_date:type_name -> google.protobuf.Timestamp
	1,  // 17: todoing.api.v1.UpdateEventRequest.recurrence_type:type_name -> todoing.api.v1.RecurrenceType
	28, // 18: todoing.api.v1.UpdateEventRequest.recurrence_config:type_name -> todoing.api.v1.UpdateEventRequest.RecurrenceConfigEntry
	31, // 19: todoing.api.v1.UpdateEventResponse.response:type_name -> todoing.api.v1.Response
	3,  // 20: todoing.api.v1.UpdateEventResponse.event:type_name -> todoing.api.v1.Event
	32, // 21: todoing.api.v1.ListEventsRequest.pagination:type_name -> todoing.api.v1.PaginationRequest
	0,  // 22: todoing.api.v1.ListEventsRequest.event_type:type_name -> todoing.api.v1.EventType
	31, // 23: todoing.api.v1.ListEventsResponse.response:type_name -> todoing.api.v1.Response
	3,  // 24: todoing.api.v1.ListEventsResponse.events:type_name -> todoing.api.v1.Event
	33, // 25: todoing.api.v1.ListEventsResponse.pagination:type_name -> todoing.api.v1.PaginationResponse
	31, // 26: todoing.api.v1.GetUpcomingEventsResponse.response:type_name -> todoing.api.v1.Response
	3,  // 27: todoing.api.v1.GetUpcomingEventsResponse.events:type_name -> todoing.api.v1.Event
	3,  // 28: todoing.api.v1.CalendarDayEvents.events:type_name -> todoing.api.v1.Event
	31, // 29: todoing.api.v1.GetCalendarEventsResponse.response:type_name -> todoing.api.v1.Response
	16, // 30: todoing.api.v1.GetCalendarEventsResponse.days:type_name -> todoing.api.v1.CalendarDayEvents
	2,  // 31: todoing.api.v1.EventComment.type:type_name -> todoing.api.v1.EventCommentType
	29, // 32: todoing.api.v1.EventComment.meta:type_name -> todoing.api.v1.EventComment.MetaEntry
	30, // 33: todoing.api.v1.EventComment.created_at:type_name -> google.protobuf.Timestamp
	30, // 34: todoing.api.v1.EventComment.updated_at:type_name -> google.protobuf.Timestamp
	31, // 35: todoing.api.v1.AddEventCommentResponse.response:type_name -> todoing.api.v1.Response
	18, // 36: todoing.api.v1.AddEventCommentResponse.comment:type_name -> todoing.api.v1.EventComment
	31, // 37: todoing.api.v1.UpdateEventCommentResponse.response:type_name -> todoing.api.v1.Response
	18, // 38: todoing.api.v1.UpdateEventCommentResponse.comment:type_name -> todoing.api.v1.EventComment
	31, // 39: todoing.api.v1.ListEventTimelineResponse.response:type_name -> todoing.api.v1.Response
	18, // 40: todoing.api.v1.ListEventTimelineResponse.items:type_name -> todoing.api.v1.EventComment
	4,  // 41: todoing.api.v1.EventService.CreateEvent:input_type -> todoing.api.v1.CreateEventRequest
	6,  // 42: todoing.api.v1.EventService.GetEvent:input_type -> todoing.api.v1.GetEventRequest
	8,  // 43: todoing.api.v1.EventService.UpdateEvent:input_type -> todoing.api.v1.UpdateEventRequest
	10, // 44: todoing.api.v1.EventService.DeleteEvent:input_type -> todoing.api.v1.DeleteEventRequest
	11, // 45: todoing.api.v1.EventService.ListEvents:input_type -> todoing.api.v1.ListEventsRequest
	13, // 46: todoing.api.v1.EventService.GetUpcomingEvents:input_type -> todoing.api.v1.GetUpcomingEventsRequest
	15, // 47: todoing.api.v1.EventService.GetCalendarEvents:input_type -> todoing.api.v1.GetCalendarEventsRequest
	19, // 48: todoing.api.v1.EventService.AddEventComment:input_type -> todoing.api.v1.AddEventCommentRequest
	21, // 49: todoing.api.v1.EventService.UpdateEventComment:input_type -> todoing.api.v1.UpdateEventCommentRequest
	23, // 50: todoing.api.v1.EventService.DeleteEventComment:input_type -> todoing.api.v1.DeleteEventCommentRequest
	24, // 51: todoing.api.v1.EventService.ListEventTimeline:input_type -> todoing.api.v1.ListEventTimelineRequest
	5,  // 52: todoing.api.v1.EventService.CreateEvent:output_type -> todoing.api.v1.CreateEventResponse
	7,  // 53: todoing.api.v1.EventService.GetEvent:output_type -> todoing.api.v1.GetEventResponse
	9,  // 54: todoing.api.v1.EventService.UpdateEvent:output_type -> todoing.api.v1.UpdateEventResponse
	31, // 55: todoing.api.v1.EventService.DeleteEvent:output_type -> todoing.api.v1.Response
	12, // 56: todoing.api.v1.EventService.ListEvents:output_type -> todoing.api.v1.ListEventsResponse
	14, // 57: todoing.api.v1.EventService.GetUpcomingEvents:output_type -> todoing.api.v1.GetUpcomingEventsResponse
	17, // 58: todoing.api.v1.EventService.GetCalendarEvents:output_type -> todoing.api.v1.GetCalendarEventsResponse
	20, // 59: todoing.api.v1.EventService.AddEventComment:output_type -> todoing.api.v1.AddEventCommentResponse
	22, // 60: todoing.api.v1.EventService.UpdateEventComment:output_type -> todoing.api.v1.UpdateEventCommentResponse
	31, // 61: todoing.api.v1.EventService.DeleteEventComment:output_type -> todoing.api.v1.Response
	25, // 62: todoing.api.v1.EventService.ListEventTimeline:output_type -> todoing.api.v1.ListEventTimelineResponse
	52, // [52:63] is the sub-list for method output_type
	41, // [41:52] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_event_proto_init() }
func file_event_proto_init() {
	if File_event_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_event_proto_rawDesc), len(file_event_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_event_proto_goTypes,
		DependencyIndexes: file_event_proto_depIdxs,
		EnumInfos:         file_event_proto_enumTypes,
		MessageInfos:      file_event_proto_msgTypes,
	}.Build()
	File_event_proto = out.File
	file_event_proto_goTypes = nil
	file_event_proto_depIdxs = nil
}
