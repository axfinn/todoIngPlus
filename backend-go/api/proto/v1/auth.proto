syntax = "proto3";

package todoing.api.v1;

option go_package = "github.com/axfinn/todoIngPlus/backend-go/pkg/api/v1";

import "common.proto"; // 修正: 由 v1/common.proto 改为 common.proto 以匹配 -I api/proto/v1
import "google/protobuf/timestamp.proto";

// 用户模型
message User {
  string id = 1;
  string username = 2;
  string email = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5; // NOTE: 目前后端未单独维护, 用 created_at 占位
}

// 注册请求
message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3; // 必填: 密码注册
  string captcha_id = 4; // 可选: 若启用图形验证码
  string captcha_code = 5; // 可选
  string email_code_id = 6; // 新增: 邮箱验证码注册 (与现有 HTTP /api/auth/send-email-code 对应)
  string email_code = 7;    // 新增
}

// 注册响应
message RegisterResponse {
  Response response = 1;
  User user = 2;
  string token = 3; // 对齐现有返回 (现行 HTTP 直接返回 token)
}

// 登录请求（统一: 支持密码或邮箱验证码二选一）
message LoginRequest {
  string email = 1;
  string password = 2;      // 使用密码登录时必填
  string email_code_id = 3; // 使用邮箱验证码登录: code id
  string email_code = 4;    // 使用邮箱验证码登录: code
}

// 发送登录邮箱验证码请求
message SendLoginEmailCodeRequest { string email = 1; }
message SendLoginEmailCodeResponse { Response response = 1; }

// 登录响应
message LoginResponse {
  Response response = 1;
  string token = 2;
  User user = 3; // 预留
}

// 验证令牌请求
message VerifyTokenRequest { string token = 1; }
// 验证令牌响应
message VerifyTokenResponse { Response response = 1; User user = 2; }

// Deprecated: 独立邮箱验证码登录 (现已合并入 LoginRequest) 保留兼容
message EmailCodeLoginRequest { string email = 1; string code = 2; }

// 认证服务
service AuthService {
  // 用户注册
  rpc Register(RegisterRequest) returns (RegisterResponse);
  // 用户登录（密码或邮箱验证码）
  rpc Login(LoginRequest) returns (LoginResponse);
  // （可选）旧邮箱验证码登录接口 - Deprecated
  rpc EmailCodeLogin(EmailCodeLoginRequest) returns (LoginResponse);
  // 发送登录邮箱验证码
  rpc SendLoginEmailCode(SendLoginEmailCodeRequest) returns (SendLoginEmailCodeResponse);
  // 验证令牌
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse);
}
